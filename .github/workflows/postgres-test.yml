name: Postgres

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
  push:
    branches:
      - main


jobs:
  Postgres-Unit:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.5.1"]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres        
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry==${{ matrix.poetry-version }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      
      - run : make setup.project
      - run : make test.registry
        env:
            OPSML_TRACKING_URI: postgresql://postgres:postgres@localhost:5432/postgres?connect_timeout=5&sslmode=disable

  MySql-Unit:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.5.1"]

    #services:
    #  mysql:
    #    image: mysql:8
    #    env:
    #      MYSQL_DATABASE: mysql
    #      MYSQL_ALLOW_EMPTY_PASSWORD: yes
    #    ports:
    #      - 3306:3306
    #    # Set health checks to wait until postgres has started
    #    options: >-
    #      --health-cmd="mysqladmin ping"
    #      --health-interval=10s
    #      --health-timeout=5s
    #      --health-retries=3
    #      --name=mysql-test

    steps:
      - uses: actions/checkout@v3

      - name: Set up MySQL
        uses: cweinberger/github-actions-mysql@1.0.0
        with:
          version: 5.7 # Optional, default version is `latest`
          hostPort: 3306 # Optional, default host port is `3306`
          containerPort: 3306 # Optional, default container port is `3306`
          user: mysql # Optional, default is `empty` (⚠️ required if you did not specify a root password)
          password: mysql # Optional, default is `empty` (⚠️ required if you did specify a user)
          database: mysql # Optional, default is `TestDatabase`
            
      - name: Install poetry
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev libmysqlclient-dev libgirepository1.0-dev
          pipx install poetry==${{ matrix.poetry-version }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      
      - run : make setup.project
      - run : make test.registry
        env:
            OPSML_TRACKING_URI: mysql+pymysql://mysql:mysql@127.0.0.1:3306/mysql?connect_timeout=5
