name: Postgres

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
  push:
    branches:
      - main


jobs:
  Postgres-Unit:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.5.1"]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres        
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry==${{ matrix.poetry-version }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      
      - run : make setup.project
      - run : make test.unit
        env:
            OPSML_TEST_DB: postgresql://postgres:postgres@localhost:5432/postgres?connect_timeout=5&sslmode=disable
